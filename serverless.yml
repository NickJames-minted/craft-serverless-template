service: testTemplate
provider:
  name: aws
  runtime: nodejs6.10
  #stage:
    #prod: prod
    #test: test
    #dev: dev
  region: us-east-1
custom:
  serviceName: template-12345
  lambdaBucket: ${self:custom.serviceName}-test-lambda-bucket
  codeBuildRuntime: "aws/codebuild"
  codeBuildRuntimeVersion: "nodejs:7.0.0"
  siteBucketName: ${self:custom.serviceName}-test-site-bucket
plugins:
  - serverless-pseudo-parameters
functions:
  deploy_spa:
    name: Deploy${self:custom.serviceName}Lambda
    handler: services/deploy_spa.lambda_handler
    runtime: python2.7
    environment:
      S3_BUCKET: ${self:custom.lambdaBucket}
      S3_KEY: deploy_spa

# you can add CloudFormation resource templates here
# From the docs: https://serverless.com/framework/docs/providers/aws/guide/resources/
#To have consistent naming in the CloudFormation Templates that get deployed we use a standard pattern:
  # {Function Name}{Cloud Formation Resource Type}{Resource Name}{SequentialID or Random String}
    # Function Name - This is optional for Resources that should be recreated when the function name gets changed. Those resources are also called function bound
    # Cloud Formation Resource Type - E.g., S3Bucket
    # Resource Name - An identifier for the specific resource, e.g. for an S3 Bucket the configured bucket name.
    # SequentialID or Random String - For a few resources we need to add an optional sequential id or random string to identify them
resources:
  Resources:
    CodeBuildProject: ${file(codebuild.yml):CodeBuildProject}
    CodeBuildRole: ${file(codebuild.yml):CodeBuildRole}
    CodePipelineRole: ${file(codepipeline.yml):CodePipelineRole}
    Pipeline: ${file(codepipeline.yml):Pipeline}
    SiteBucket: ${file(codepipeline.yml):SiteBucket}
    PipelineBucket: ${file(codepipeline.yml):PipelineBucket}

    #GithubEventSNSTopic: ${file(github.yml):GithubEventSNSTopic}
    #GithubIAMUser: ${file(github.yml):GithubIAMUser}
    #GithubIAMUserAccessKey: ${file(github.yml):GithubIAMUserAccessKey}
    #GithubWebhookCustomResourceRole: ${file(github.yml):GithubWebhookCustomResourceRole}
    #GithubWebhookCustomResource: ${file(github.yml):GithubWebhookCustomResource}
    #GithubWebhook: ${file(github.yml):GithubWebhook}
    #BuildStateNotifier: ${file(github.yml):BuildStateNotifier}
    #WebhookHandlerExecutionRole: ${file(github.yml):WebhookHandlerExecutionRole}
    #GithubWebhookHandler: ${file(github.yml):GithubWebhookHandler}
    #LambdaExecutionRole: ${file(github.yml):LambdaExecutionRole}
    #DeployUpdateEventRule: ${file(github.yml):DeployUpdateEventRule}
  #Outputs:
    #GithubEventSNSTopicArn:
      #Value:
        #"Fn::GetAtt": [GithubEventSNSTopic, Arn]
      #Export:
        #Name: ${self:custom.serviceName}:GithubEventSNSTopicArn
    #GithubIAMUserName:
      #Value:
        #Ref: GithubIAMUser
      #Export:
        #Name: ${self:custom.serviceName}:GithubIAMUserName
