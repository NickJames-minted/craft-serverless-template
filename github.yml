GithubEventSNSTopic:
  Type: "AWS::SNS::Topic"
  Properties:
    DisplayName: "${self:custom.serviceName}-GithubEvents"
    Subscription:
      - Endpoint:
          Fn::GetAtt:
            - GithubWebhookHandler
            - Arn
        Protocol: lambda
GithubIAMUser:
  Type: "AWS::IAM::User"
  Properties:
    UserName: "${env:CODEBUILD_PROJECT_NAME}-github-user"
    Policies:
      - PolicyName: "${env:CODEBUILD_PROJECT_NAME}-github-sns-role"
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action: "sns:Publish"
              Resource:
                Ref: GithubEventSNSTopic
GithubIAMUserAccessKey:
  Type: "AWS::IAM::AccessKey"
  Properties:
    UserName:
      Ref: GithubIAMUser
##########################
# GithubWebhook(CustomResource)
##########################
GithubWebhookCustomResourceRole:
  Type: "AWS::IAM::Role"
  Properties:
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: "sts:AssumeRole"
    Policies:
      - PolicyName: "${env:CODEBUILD_PROJECT_NAME}-github-webhook-lambda-execution-role"
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource: "arn:aws:logs:*:*:*"
GithubWebhookCustomResource:
  Type: "AWS::Lambda::Function"
  Properties:
    Handler: index.handler
    Role:
      Fn::GetAtt:
        - GithubWebhookCustomResourceRole
        - Arn
    Code:
      ZipFile: ./services/js/githubWebhookResources
    Runtime: nodejs6.10
    Timeout: 30
    Environment:
      Variables:
        GITHUB_TOKEN: ${env:GITHUB_PERSONAL_ACCESS_TOKEN}
        GITHUB_REPOSITORY_URL: ${env:GITHUB_REPOSITORY_URL}
        GITHUB_TARGET_RESOURCE: ${env:GITHUB_TARGET_RESOURCE}
        SNS_ACCESS_KEY_ID:
          Ref: GithubIAMUserAccessKey
        SNS_SECRET_ACCESS_KEY:
          Fn::GetAtt:
            - GithubIAMUserAccessKey
            - SecretAccessKey
        SNS_REGION:
          Ref: "AWS::Region"
        SNS_TOPIC:
          Ref: GithubEventSNSTopic
GithubWebhook:
  Type: "Custom::GithubWebhook"
  Properties:
    ServiceToken:
      Fn::GetAtt:
        - GithubWebhookCustomResource
        - Arn
    # Define all variables to re-create Github's webhook configuration via `make deploy` when parameters have changed
    GITHUB_TOKEN: ${env:GITHUB_PERSONAL_ACCESS_TOKEN}
    GITHUB_REPOSITORY_URL: ${env:GITHUB_REPOSITORY_URL}
    GITHUB_TARGET_RESOURCE: ${env:GITHUB_TARGET_RESOURCE}
    SNS_ACCESS_KEY_ID:
      Ref: GithubIAMUserAccessKey
    SNS_SECRET_ACCESS_KEY:
      Fn::GetAtt:
        - GithubIAMUserAccessKey
        - SecretAccessKey
    SNS_REGION:
      Ref: "AWS::Region"
    SNS_TOPIC:
      Ref: GithubEventSNSTopic
##########################
# Lambda (BuildStateNotifier)
##########################
LambdaExecutionRole:
  Type: "AWS::IAM::Role"
  Properties:
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: "sts:AssumeRole"
    Policies:
      - PolicyName: "${env:CODEBUILD_PROJECT_NAME}-lambda-execution-role"
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource: "arn:aws:logs:*:*:*"
GithubWebhookHandler:
  Type: "AWS::Lambda::Function"
  Properties:
    Role:
      Fn::GetAtt:
        - WebhookHandlerExecutionRole
        - Arn
    Handler: index.handler
    Runtime: nodejs6.10
    Code:
      ZipFile: ./src/functions/github-webhook-handler
    Timeout: 10
    MemorySize: 128
    Environment:
      Variables:
        DO_NOT_RUN: false
        CODEBUILD_PROJECT_REGION: ${env:CODEBUILD_PROJECT_REGION}
        CODEBUILD_PROJECT_NAME: ${env:CODEBUILD_PROJECT_NAME}
        GITHUB_TOKEN: ${env:GITHUB_PERSONAL_ACCESS_TOKEN}
        GITHUB_REPOSITORY_URL: ${env:GITHUB_REPOSITORY_URL}
        GITHUB_TARGET_RESOURCE: ${env:GITHUB_TARGET_RESOURCE}
BuildStateNotifier:
  Type: "AWS::Lambda::Function"
  Properties:
    Role:
      Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
    Handler: index.handler
    Runtime: nodejs6.10
    Code:
      ZipFile: ./src/functions/build-state-notifier
    Timeout: 10
    MemorySize: 128
    Environment:
      Variables:
        CODEBUILD_PROJECT_REGION: ${env:CODEBUILD_PROJECT_REGION}
        GITHUB_TOKEN: ${env:GITHUB_PERSONAL_ACCESS_TOKEN}
        GITHUB_REPOSITORY_URL: ${env:GITHUB_REPOSITORY_URL}
DeployUpdateEventRule:
  Type: "AWS::Events::Rule"
  Properties:
    Name: "${env:CODEBUILD_PROJECT_NAME}-DeployTrigger"
    Description: xxx
    EventPattern:
      source:
        - "aws.codebuild"
      detail-type:
        - "CodeBuild Build State Change"
      detail:
        project-name:
          - ${env:CODEBUILD_PROJECT_NAME}
    Targets:
      - Arn:
          Fn::GetAtt:
            - BuildStateNotifier
            - Arn
        Id: "${env:CODEBUILD_PROJECT_NAME}BuildStatus"
SNSInvokeLambdaPermission:
  Type: "AWS::Lambda::Permission"
  Properties:
    Action: "lambda:InvokeFunction"
    FunctionName:
      Fn::GetAtt:
        - BuildStateNotifier
        - Arn
    Principal: sns.amazonaws.com
    SourceArn:
      Ref: GithubEventSNSTopic
  # Lambda (WebhookHandler)
  ##########################
WebhookHandlerExecutionRole:
  Type: "AWS::IAM::Role"
  Properties:
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: "sts:AssumeRole"
    Policies:
      - PolicyName: "${env:CODEBUILD_PROJECT_NAME}-webhook-handler-execution-role"
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource: "arn:aws:logs:*:*:*"
            - Effect: Allow
              Action:
                - "codebuild:StartBuild"
              Resource: "arn:aws:codebuild:${env:CODEBUILD_PROJECT_REGION}:${env:AWS_ACCOUNT_ID}:project/${env:CODEBUILD_PROJECT_NAME}"

